(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{113:function(e,t,a){"use strict";a.r(t);var r=a(0),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"git-extras"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git-extras"}},[e._v("#")]),e._v(" Git Extras")]),e._v(" "),r("p",[r("img",{attrs:{src:a(99),alt:"Git Large Files"}})]),e._v(" "),r("p",[e._v("It is not a rare case to unintentionally add large files to the git history. A misconfigured "),r("code",[e._v(".gitignore")]),e._v(" file or a team member relying on global "),r("code",[e._v(".gitignore")]),e._v(" assuming everyone in the team has the same ignore rules... It could happen. And what we do once it happens? We need a way to find large files in our repository. I made a collection of scripts that I found online and use in such cases. I called it "),r("a",{attrs:{href:"https://github.com/ivandokov/git-extras",target:"_blank",rel:"noopener noreferrer"}},[e._v("Git Extras"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("h2",{attrs:{id:"git-large-files"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git-large-files"}},[e._v("#")]),e._v(" Git Large Files")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/ivandokov/git-extras/blob/master/git-large-files",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("git-large-files")]),r("OutboundLink")],1),e._v(" is a small script that gives you the ability to find files larger than "),r("em",[e._v("N")]),e._v(" megabytes in a git repository. It scans the whole history and prints our large files. You can use it like this to find files larget than 2MB:")]),e._v(" "),r("div",{staticClass:"language-bash extra-class"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[e._v("./git-large-files "),r("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v("\n")])])]),r("p",[e._v("The output is similar to this:")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("281218048 95f938800a72eef017cf41d1945ac1a83e03285e path/to/file.avi\n")])])]),r("p",[e._v("It shows the size in bytes, the commit that added the file to the history and the path to the file.")]),e._v(" "),r("p",[e._v("Once we have the paths to the large files we can use "),r("a",{attrs:{href:"https://github.com/ivandokov/git-extras/blob/master/git-remove-history",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("git-remove-history")]),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("h2",{attrs:{id:"git-remove-history"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git-remove-history"}},[e._v("#")]),e._v(" Git Remove History")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/ivandokov/git-extras/blob/master/git-remove-history",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("git-remove-history")]),r("OutboundLink")],1),e._v(" rewrites the git history and removes the provided files. You can use it like this:")]),e._v(" "),r("div",{staticClass:"language-bash extra-class"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[e._v("./git-delete-history path1 path2\n")])])]),r("p",[e._v("When you rewrite the history of a git repository you have to use "),r("code",[e._v("git push --force")]),e._v(" to upload the rewritten repository to the server.")]),e._v(" "),r("p",[r("strong",[e._v("WARNING")]),e._v(" Force push is operation that you "),r("strong",[e._v("cannot")]),e._v(" reverse. If someone uploads newer code than what you have locally it will be lost!")])])}),[],!1,null,null,null);t.default=s.exports},99:function(e,t,a){e.exports=a.p+"assets/img/git-large-file.983af825.jpg"}}]);